name: Build data-source table
on:
  schedule:
    - cron: "0 * * * *"  # hourly
  workflow_dispatch:

jobs:
  harvest:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # to commit the dist files
    env:
      OWNER: ${{ github.repository_owner }}   # set to 'tacoma-power' when you move to org
      REPO_PREFIX: NR-
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Clone NR repos (shallow)
        env:
          GH_TOKEN: ${{ secrets.ORG_READ_TOKEN }}
        run: |
          python - <<'PY'
          import os, subprocess, json, pathlib
          owner = os.getenv("OWNER")
          prefix = os.getenv("REPO_PREFIX","NR-")
          out = subprocess.check_output(['gh','repo','list',owner,'--limit','1000','--json','name'], text=True)
          names = [r['name'] for r in json.loads(out) if r['name'].startswith(prefix)]
          print(f"NR repos: {len(names)}")
          root = pathlib.Path("repos"); root.mkdir(exist_ok=True)
          for n in names:
              dest = root / n
              if dest.exists(): 
                  print("skip", n); continue
              subprocess.call(['gh','repo','clone',f"{owner}/{n}",str(dest),'--','--depth=1'])
          PY

      - name: Build table
        run: python scripts/harvest_datasources.py

      - name: Show generated files
        run: |
          echo "== data directory ==" && ls -laR data || true
          echo "== datasources head ==" && head -n 20 data/datasources.csv || true
          echo "== lineage head ==" && head -n 20 data/lineage.csv || true
      
      - name: Commit artifacts (if changed)
        run: |
          set -e
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add -A data
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "build: update datasources & lineage tables"
          git push
